import streamlit as st
from faq_fetcher import fetch_google_faqs, fetch_chatgpt_faqs
import pandas as pd

st.set_page_config(page_title="AI FAQ Generator", layout="centered")

# === Header Section ===
st.markdown("""
<style>
    .main-title {
        font-size: 2.2em;
        font-weight: bold;
        text-align: center;
        margin-bottom: 10px;
    }
    .sub-title {
        font-size: 1.1em;
        text-align: center;
        margin-bottom: 30px;
        color: #555;
    }
</style>
<div class="main-title">üìå AI-Powered FAQ Generator</div>
<div class="sub-title">Generate questions your audience is asking ‚Äî from Google and ChatGPT</div>
""", unsafe_allow_html=True)

# === Input Section ===
st.markdown("### üîç Enter a keyword to begin")
keyword = st.text_input("Keyword", "")

if st.button("‚ö° Generate FAQs") and keyword:
    with st.spinner("Fetching FAQs..."):
        google_faqs = fetch_google_faqs(keyword)
        chatgpt_faqs = fetch_chatgpt_faqs(keyword)

    # === Google FAQs ===
    if google_faqs:
        st.markdown("### üåê FAQs from Google (People Also Ask)")
        for i, q in enumerate(google_faqs, 1):
            st.markdown(f"- {q}")
    else:
        st.warning("No Google FAQs found.")

    # === ChatGPT FAQs ===
    if chatgpt_faqs:
        st.markdown("### ü§ñ FAQs Generated by ChatGPT")
        for i, q in enumerate(chatgpt_faqs, 1):
            st.markdown(f"- {q}")
    else:
        st.warning("ChatGPT couldn‚Äôt generate any FAQs.")

    # === CSV Download ===
    all_faqs = google_faqs + chatgpt_faqs
    if all_faqs:
        df = pd.DataFrame(all_faqs, columns=["FAQ"])
        st.download_button("‚¨áÔ∏è Download FAQs as CSV", df.to_csv(index=False), "faqs.csv", "text/csv")

# === Footer ===
st.markdown("""
---
<p style='text-align:center; font-size: 0.9em; color: gray;'>
Built by [Your Name or Brand] ‚Ä¢ Powered by SerpAPI & OpenAI
</p>
""", unsafe_allow_html=True)
