import streamlit as st
import pandas as pd
from faq_fetcher import fetch_google_data, fetch_chatgpt_faqs

# === Page Configuration ===
st.set_page_config(
    page_title="AI FAQ Generator",
    layout="centered"
)

# === Header ===
st.markdown("""
    <h1 style='text-align: center;'>ü§ñ AI-Powered FAQ Generator</h1>
    <p style='text-align: center; font-size: 18px;'>Generate real user questions, related searches, and top URLs from Google and ChatGPT.</p>
    <hr>
""", unsafe_allow_html=True)

# === Input ===
keyword = st.text_input("üîç Enter a keyword", placeholder="e.g. AI in education")

if st.button("üöÄ Generate FAQs"):
    if not keyword.strip():
        st.warning("Please enter a keyword to continue.")
    else:
        with st.spinner("Fetching data..."):
            google_faqs, related_keywords, top_urls = fetch_google_data(keyword)
            chatgpt_faqs = fetch_chatgpt_faqs(keyword)

        # === Google FAQs ===
        if google_faqs:
            st.subheader("üåê Google FAQs (People Also Ask)")
            for q in google_faqs:
                st.markdown(f"- {q}")
        else:
            st.info("No Google FAQs found.")

        # === People Also Search For ===
        if related_keywords:
            st.subheader("üîÅ People Also Search For")
            for kw in related_keywords:
                st.markdown(f"- {kw}")
        else:
            st.info("No related keywords found.")

        # === Top URLs ===
        if top_urls:
            st.subheader("üîó Top Ranking Pages (US)")
            for url in top_urls:
                st.markdown(f"- {url}")
        else:
            st.info("No ranking URLs found.")

        # === ChatGPT FAQs ===
        if chatgpt_faqs:
            st.subheader("ü§ñ ChatGPT-Generated FAQs")
            for q in chatgpt_faqs:
                st.markdown(f"- {q}")
        else:
            st.info("No questions generated by ChatGPT.")

        # === CSV Download ===
        all_faqs = google_faqs + chatgpt_faqs
        if all_faqs:
            df = pd.DataFrame(all_faqs, columns=["FAQ"])
            st.download_button("‚¨áÔ∏è Download All FAQs as CSV", df.to_csv(index=False), "faqs.csv", "text/csv")

# === Footer ===
st.markdown("""
    <hr>
    <p style='text-align:center; font-size: 14px; color: gray;'>
        Built with ‚ù§Ô∏è by Growthner ‚Ä¢ Powered by SerpAPI & OpenAI
    </p>
""", unsafe_allow_html=True)
